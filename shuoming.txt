1深拷贝：
             //第二种方法：

                 Object.assgin()

 
             //第三种方法：
                  JSON.parse(JSON.stringify())

上文的所有的示例都忽略了一些特殊的情况： 对对象/数组中的Function，正则表达式等特殊类型的拷贝


为什么要使用深拷贝呢？
答：希望在改变新的数组的时候，不改变原数组

深拷贝的要求程度？
答：我们在深拷贝的时候，一定要弄清我们对深拷贝的要求程度：要拷贝对象的每一层属性或数组元素

如何检验拷贝是否成功？
改变任意一个新对象/数组中的属性/元素，是否改变原对象/数组


2.浅拷贝：

   将数组或对象的地址直接赋值给新对象，都只是原对象的引用。

 也就是说他们都指向同一个地址。